<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="28">
  <CheatEntries>
    <CheatEntry>
      <ID>313</ID>
      <Description>"Zoom"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dekaron.exe
  Version:
  Date   : 2020-01-31
  Author : nvadr

  This script does blah blah blah
}

[ENABLE]

aobscan(zoomz,F3 0F 10 48 04 F3 0F 5D) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
mov [eax+04],(float)150
code:
  movss xmm1,[eax+04]
  jmp return

zoomz:
  jmp newmem
return:
registersymbol(zoomz)

[DISABLE]

zoomz:
  db F3 0F 10 48 04

unregistersymbol(zoomz)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 00BCC70A

"dekaron.exe"+7CC6ED: CC                       -  int 3
"dekaron.exe"+7CC6EE: CC                       -  int 3
"dekaron.exe"+7CC6EF: CC                       -  int 3
"dekaron.exe"+7CC6F0: 56                       -  push esi
"dekaron.exe"+7CC6F1: 8B F1                    -  mov esi,ecx
"dekaron.exe"+7CC6F3: 8B 0D D4 61 5F 01        -  mov ecx,[dekaron.exe+11F61D4]
"dekaron.exe"+7CC6F9: 8B 01                    -  mov eax,[ecx]
"dekaron.exe"+7CC6FB: FF 50 08                 -  call dword ptr [eax+08]
"dekaron.exe"+7CC6FE: 8B 4C 24 08              -  mov ecx,[esp+08]
"dekaron.exe"+7CC702: F3 0F 10 15 74 23 2C 01  -  movss xmm2,[dekaron.exe+EC2374]
// ---------- INJECTING HERE ----------
"dekaron.exe"+7CC70A: F3 0F 10 48 04           -  movss xmm1,[eax+04]
// ---------- DONE INJECTING  ----------
"dekaron.exe"+7CC70F: F3 0F 5D 09              -  minss xmm1,[ecx]
"dekaron.exe"+7CC713: F3 0F 10 00              -  movss xmm0,[eax]
"dekaron.exe"+7CC717: F3 0F 5F C1              -  maxss xmm0,xmm1
"dekaron.exe"+7CC71B: F3 0F 11 46 08           -  movss [esi+08],xmm0
"dekaron.exe"+7CC720: F3 0F 10 48 0C           -  movss xmm1,[eax+0C]
"dekaron.exe"+7CC725: F3 0F 5D 49 04           -  minss xmm1,[ecx+04]
"dekaron.exe"+7CC72A: F3 0F 10 40 08           -  movss xmm0,[eax+08]
"dekaron.exe"+7CC72F: F3 0F 5F C1              -  maxss xmm0,xmm1
"dekaron.exe"+7CC733: F3 0F 11 46 0C           -  movss [esi+0C],xmm0
"dekaron.exe"+7CC738: F3 0F 10 49 08           -  movss xmm1,[ecx+08]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Fareye"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : dekaron.exe
  Version:
  Date   : 2019-10-30
  Author : nvadr

  This script does blah blah blah
}

define(bytes,F3 0F 10 40 08)

[ENABLE]


aobscan(eyez,F3 0F 10 40 08 F3 0F 11 44 24 0C F3 0F 10 40 04)
registersymbol(eyez)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
mov [eax+08],(float)300

code:
  movss xmm0,[eax+08]
  jmp return

eyez:
  jmp newmem
return:

[DISABLE]

eyez:
  db bytes
  // movss xmm0,[eax+08]

dealloc(newmem)
unregistersymbol(eyez)
{
// ORIGINAL CODE - INJECTION POINT: 00B72150

"dekaron.exe"+772126: 8B 0D 54 3D 53 01        -  mov ecx,[dekaron.exe+1133D54]
"dekaron.exe"+77212C: 66 0F 6E 48 54           -  movd xmm1,[eax+54]
"dekaron.exe"+772131: 66 0F 6E 40 58           -  movd xmm0,[eax+58]
"dekaron.exe"+772136: 0F 5B C9                 -  cvtdq2ps xmm1,xmm1
"dekaron.exe"+772139: 8B 01                    -  mov eax,[ecx]
"dekaron.exe"+77213B: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"dekaron.exe"+77213E: F3 0F 5E C8              -  divss xmm1,xmm0
"dekaron.exe"+772142: F3 0F 11 8D 74 FF FF FF  -  movss [ebp-0000008C],xmm1
"dekaron.exe"+77214A: FF 50 08                 -  call dword ptr [eax+08]
"dekaron.exe"+77214D: 83 EC 10                 -  sub esp,10
// ---------- INJECTING HERE ----------
"dekaron.exe"+772150: F3 0F 10 40 08           -  movss xmm0,[eax+08]
// ---------- DONE INJECTING  ----------
"dekaron.exe"+772155: F3 0F 11 44 24 0C        -  movss [esp+0C],xmm0
"dekaron.exe"+77215B: F3 0F 10 40 04           -  movss xmm0,[eax+04]
"dekaron.exe"+772160: F3 0F 11 44 24 08        -  movss [esp+08],xmm0
"dekaron.exe"+772166: F3 0F 10 85 74 FF FF FF  -  movss xmm0,[ebp-0000008C]
"dekaron.exe"+77216E: F3 0F 11 44 24 04        -  movss [esp+04],xmm0
"dekaron.exe"+772174: F3 0F 10 00              -  movss xmm0,[eax]
"dekaron.exe"+772178: 8D 45 B8                 -  lea eax,[ebp-48]
"dekaron.exe"+77217B: F3 0F 11 04 24           -  movss [esp],xmm0
"dekaron.exe"+772180: 50                       -  push eax
"dekaron.exe"+772181: 90                       -  nop
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Teleportz"</Description>
      <LastState/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
aobscan(telez,8B 80 90 00 00 00 C3 CC CC CC CC CC CC)
label(tlblz)
registersymbol(tlblz)

telez:
tlblz:
mov eax,3
nop
ret


[Disable]
tlblz:
mov eax,[eax+00000090]


</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Auto Potz"</Description>
      <LastState/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(potz,83 78 08 13 75 5F)
alloc(newmem,$1000)
registersymbol(potz)
label(return)

newmem:
db 83 78 08 01//cmp dword ptr [eax+08],01 // checking for HP pot?
db 75 0E
mov dword ptr[eax+08],11 // change to auto pot
mov dword ptr[eax+10],11
check_mana:
db 83 78 08 02//cmp dword ptr [eax+08],02 // checking for MP pot?
db 75 0E
mov dword ptr[eax+08],12 // change to auto pot
mov dword ptr[eax+10],12
finished_check:
db 83 78 08 13
jne 00DB9D04
jmp return

potz:
jmp newmem
nop
return:

[DISABLE]
potz:
db 83 78 08 13 75 5F
//cmp [eax+08],13
//db 75 5F //jne 00D2F544
unregistersymbol(potz)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"NoAggroz"</Description>
      <LastState/>
      <Color>FF8080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(norange,0F B7 86 61 01 00 00 50 8B 11)
registersymbol(norange)
aobscan(noaggro,0F B6 86 7F 01 00 00 83 C4 0C 89 45 8C 8B 86 80 01 00 00 89 45 90 0F B6 86 F1 01 00 00)
registersymbol(noaggro)
aobscan(aggroret,8B 01 FF 50 0C 8D 4D 8C 51 8B C8 8B 10 FF 52 1C 8B 0D ?? ?? ?? ?? 0F B7 86 61 01 00 00)
aobscan(cancelanim,66 C7 45 E6 00 06 E8 ?? ?? ?? ?? F3 0F 10 45 B8 8B 08 66 8B 40 04 66 89 45 E0 8A 46 0C)
registersymbol(cancelanim)
registersymbol(aggroret)
alloc(newaggro,2048)
alloc(newrange,1024)
label(return)

noaggro:
jmp newaggro
nop
nop

cancelanim:
mov word ptr [ebp-1A],0400

newaggro:
//mov [ebp-00000074],00
mov [ebp-00000070],00
mov [ebp-0000006C],00
mov [ebp-00000068],00
mov [ebp-00000064],00
mov [ebp-00000060],00
mov [ebp-0000005C],00
mov [ebp-00000058],00
mov [ebp-00000054],00
mov [ebp-00000050],00
mov [ebp-0000004C],00
mov [ebp-00000048],00
mov [ebp-00000044],00
mov [ebp-00000040],00
mov [ebp-0000003C],00
mov [ebp-00000038],00
mov [ebp-00000034],00
mov [ebp-00000030],00
mov [ebp-0000002C],00
mov [ebp-00000028],00
mov [ebp-00000024],00
mov [ebp-00000020],00
mov [ebp-0000001C],00
mov [ebp-00000018],00
mov [ebp-00000014],00
mov [ebp-00000010],00
mov byte ptr [esi+000001F1],00
mov byte ptr [esi+0000017F],00
mov byte ptr [esi+000001B8],00
mov byte ptr [esi+00000263],00
mov byte ptr [esi+000002D5],00
mov byte ptr [esi+0000029C],00
mov byte ptr [esi+000003B9],00
mov byte ptr [esi+000003F2],00
mov byte ptr [esi+0000042B],00
mov byte ptr [esi+00000464],00
mov byte ptr [esi+0000029C],00
mov byte ptr [esi+00000380],00
mov dword ptr [esi+000001F2],00000000
mov dword ptr [esi+00000180],00000000
mov dword ptr [esi+000001B9],00000000
mov dword ptr [esi+00000264],00000000
mov dword ptr [esi+000002D6],00000000
mov dword ptr [esi+0000029D],00000000
mov dword ptr [esi+000003BA],00000000
mov dword ptr [esi+000003F3],00000000
mov dword ptr [esi+0000042C],00000000
mov dword ptr [esi+00000465],00000000
mov dword ptr [esi+0000029D],00000000
mov dword ptr [esi+00000381],00000000
add esp,0C
mov ecx,[edi+0C]
jmp aggroret

norange:
jmp newrange
nop
nop
return:

newrange:
mov word ptr [esi+00000161],06
movzx eax,word ptr [esi+00000161]
jmp return

[DISABLE]
noaggro:
movzx eax,byte ptr [esi+0000017F]

norange:
movzx eax,word ptr [esi+00000161]

cancelanim:
mov word ptr [ebp-1A],0600

dealloc(newaggro)
dealloc(newrange)
unregistersymbol(norange)
unregistersymbol(noaggro)
unregistersymbol(aggroret)
unregistersymbol(cancelanim)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Vacuumz"</Description>
      <LastState/>
      <Color>FF8080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(vacz,8B 54 24 04 8B 42 04 89 41 08 8B 42 08 89 41 0C 8B 02 89 41 04)
alloc(newvac,$1000)
registersymbol(vacz)

vacz:
jmp newvac
nop
nop

newvac:
mov edx,[esp+04]

mov eax,3E7
mov [ecx+04],eax //explore
mov [ecx+08],eax //persuit
mov [ecx+0C],eax //sight

mov eax,0
mov [ecx+10],eax

mov eax,1
mov [ecx+14],eax //stand
mov eax,7D0
mov [ecx+18],eax //move
mov eax,7D0
mov [ecx+1C],eax //explore_stand
mov eax,1
mov [ecx+20],eax //explore_move

mov [ecx+40],3E7 //followTarget

mov eax,3E7//spawn monster count
mov [ecx+000000AC],eax
mov eax,1 //spawn monster tick
mov [ecx+000000B0],eax
mov eax,0 //spawn monster range
mov [ecx+000000B4],eax
mov eax,1
mov [ecx+000000B8],eax

ret 4


[DISABLE]
vacz:
  db 8B 54 24 04 8B 42 04

dealloc(newvac)
unregistersymbol(vacz)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"Boss Spawnz"</Description>
      <LastState/>
      <Color>0080FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address1,0056A7B0)

[ENABLE]
alloc(newmem1,$1000)
//aobscan(address1,F3 0F 59 80 11 01 00 00 F3 0F 59 05)
label(code1)
label(return1)

newmem1:
code1:
MOV DWORD PTR DS:[EAX+111],(float)0.001//3E4CCCCD //3E99999A old
//mulss xmm0,[eax+00000111]
jmp return1

address1:
  jmp newmem1
  nop
  nop
  nop

//  nop
//  nop
//  nop
//  nop
//  nop
//  nop
//  nop
//  nop
return1:


[DISABLE]
address1:
  db F3 0F 59 80 11 01 00 00// F3 0F 59 05 80 24 2C 01
  // mulss xmm0,[edi+00000111]
  // mulss xmm0,[011F9F98]
dealloc(newmem1)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Wallz"</Description>
      <LastState/>
      <Color>FF0080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dekaron.exe
  Version:
  Date   : 2020-01-03
  Author : nvadr

  This script does blah blah blah
}

define(address,00F8D064)
define(bytes,0F BA 25 A8 9E 5E 01 01 73 09)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
cmp edx,11DC
jne code

cmp [esi+402],'warf'
je code

mov [esi+402],'warf'
mov [esi+406],'are.'
mov [esi+40A],'mac'

code:
  bt [015E9EA8],01
  jae 00F8D077
  jmp return

address:
  jmp newmem
  nop
  nop
  nop

  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // bt [015EE888],01
  // jae 00F8FF97

dealloc(newmem)
{
// ORIGINAL CODE - INJECTION POINT: 00F8FF84

"dekaron.exe"+B8FF56: 76 08                    -  jna dekaron.exe+B8FF60
"dekaron.exe"+B8FF58: 3B F8                    -  cmp edi,eax
"dekaron.exe"+B8FF5A: 0F 82 94 02 00 00        -  jb dekaron.exe+B901F4
"dekaron.exe"+B8FF60: 83 F9 20                 -  cmp ecx,20
"dekaron.exe"+B8FF63: 0F 82 D2 04 00 00        -  jb dekaron.exe+B9043B
"dekaron.exe"+B8FF69: 81 F9 80 00 00 00        -  cmp ecx,00000080
"dekaron.exe"+B8FF6F: 73 13                    -  jae dekaron.exe+B8FF84
"dekaron.exe"+B8FF71: 0F BA 25 14 D0 51 01 01  -  bt [dekaron.exe+111D014],01
"dekaron.exe"+B8FF79: 0F 82 8E 04 00 00        -  jb dekaron.exe+B9040D
"dekaron.exe"+B8FF7F: E9 E3 01 00 00           -  jmp dekaron.exe+B90167
// ---------- INJECTING HERE ----------
"dekaron.exe"+B8FF84: 0F BA 25 88 E8 5E 01 01  -  bt [dekaron.exe+11EE888],01
"dekaron.exe"+B8FF8C: 73 09                    -  jae dekaron.exe+B8FF97
// ---------- DONE INJECTING  ----------
"dekaron.exe"+B8FF8E: F3 A4                    - repe  movsb
"dekaron.exe"+B8FF90: 8B 44 24 0C              -  mov eax,[esp+0C]
"dekaron.exe"+B8FF94: 5E                       -  pop esi
"dekaron.exe"+B8FF95: 5F                       -  pop edi
"dekaron.exe"+B8FF96: C3                       -  ret
"dekaron.exe"+B8FF97: 8B C7                    -  mov eax,edi
"dekaron.exe"+B8FF99: 33 C6                    -  xor eax,esi
"dekaron.exe"+B8FF9B: A9 0F 00 00 00           -  test eax,0000000F
"dekaron.exe"+B8FFA0: 75 0E                    -  jne dekaron.exe+B8FFB0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Char Speedz"</Description>
      <LastState/>
      <Color>C08000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(_aSpeed,5F 5E D9 40 08)
label(_aSpeedLabel)
registersymbol(_aSpeedLabel)
alloc(newmem,16)
label(ReturnSpeed)
label(SpeedValue)
registersymbol(SpeedValue)

_aSpeed:
_aSpeedLabel:
jmp newmem
ReturnSpeed:

newmem:
pop edi
pop esi
fld dword ptr [SpeedValue]
ret

/*jmp ReturnSpeed
push esi
push edi
call dword ptr [SpeedValue]*/
SpeedValue:
db 00 00 D0 40

[DISABLE]
dealloc(newmem)
unregistersymbol(SpeedValue)
_aSpeedLabel:
pop edi
pop esi
fld dword ptr [eax+08]
unregistersymbol(_aSpeedLabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"Mob Speedz"</Description>
      <LastState/>
      <Color>C08000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(_aMobSpeed,80 7C 24 04 00 74 06 D9 40 79)
label(_aMobSpeedLabel)
registersymbol(_aMobSpeedLabel)
alloc(DrakoMobSpeedBace,2048)
label(MobIsWalking)
label(MobRunSpeedValue)
label(MobWalkSpeedValue)
label(ReturnMobSpeed)
registersymbol(MobRunSpeedValue)
registersymbol(MobWalkSpeedValue)

DrakoMobSpeedBace:
cmp byte ptr [esp+04],00
je MobIsWalking
fld dword ptr [MobRunSpeedValue]
//pop ebp
ret 0004
MobIsWalking:
fld dword ptr [MobWalkSpeedValue]
//pop ebp
ret 0004

MobRunSpeedValue:
db 00 00 60 41
MobWalkSpeedValue:
db 00 00 40 40

_aMobSpeed:
_aMobSpeedLabel:
jmp DrakoMobSpeedBace
nop
nop
ReturnMobSpeed:

[DISABLE]
dealloc(DrakoMobSpeedBace)
unregistersymbol(MobRunSpeedValue)
unregistersymbol(MobWalkSpeedValue)
_aMobSpeedLabel:
cmp byte ptr [esp+04],00
db 74 06
unregistersymbol(_aMobSpeedLabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>59</ID>
      <Description>"Toggle Slowz"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
MobRunSpeedValue:
db 00 00 01 01

[DISABLE]
MobRunSpeedValue:
db 00 00 60 41
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>50</ID>
      <Description>"Auto Petz Attack"</Description>
      <LastState/>
      <Color>C080FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,420)
label(return)
label(autopet)
registersymbol(autopet)
aobscan(ap,0F B7 86 FE 00 00 00 50 8B 11 FF 52 08 8B 17 8B CF 8B F0)

ap:
autopet:

jmp newmem
nop
nop
return:

newmem:
mov eax,05
mov word ptr [esi+000000FE],ax
//mov word ptr [esi+00000200],00
//mov word ptr [esi+000002A8],00
//mov word ptr [esi+00000270],00
movzx eax, word ptr [esi+000000FE]
jmp return

[DISABLE]
autopet:
movzx eax, word ptr [esi+000000FE]
dealloc(newmem)
unregistersymbol(autopet)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"Pet Attackz Hack"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <LastState/>
      <Color>FF80FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
aobscan(petatk1,C7 44 24 20 04 00 00 00 FF 50 0C 8B C8)
label(pa1)
registersymbol(pa1)
aobscan(petatk2,C7 44 24 20 06 00 00 00 FF 50 0C 8B C8)
label(pa2)
registersymbol(pa2)
aobscan(petatk3,C7 44 24 28 05 00 00 00 FF 50 0C 8B C8)
label(pa3)
registersymbol(pa3)
aobscan(petdel1,8B 58 20 8B 06 C7 44 24 0C 19 00 00 00)
label(pd1)
registersymbol(pd1)
aobscan(petdel2,8B 58 28 8B 06 C7 44 24 0C 19 00 00 00)
label(pd2)
registersymbol(pd2)
aobscan(petdel3,8B 68 30 8B 06 C7 44 24 14 19 00 00 00)
label(pd3)
registersymbol(pd3)

petdel1:
pd1:
mov ebx,[eax+01]
petatk1:
pa1:
mov dword ptr [esp+20],00000004
petdel2:
pd2:
mov ebx,[eax+01]
petatk2:
pa2:
mov dword ptr [esp+20],00000004
petdel3:
pd3:
mov ebp,[eax+01]
petatk3:
pa3:
mov dword ptr [esp+28],00000004

[disable]
pa1:
mov dword ptr [esp+20],00000004 //type of attack
pa2:
mov dword ptr [esp+20],00000006 //type of attack
pa3:
mov dword ptr [esp+28],00000005 //type of attack
pd1:
mov ebx,[eax+20]
pd2:
mov ebx,[eax+28]
pd3:
mov ebp,[eax+30]

unregistersymbol(pa1)
unregistersymbol(pa2)
unregistersymbol(pa3)
unregistersymbol(pd1)
unregistersymbol(pd2)
unregistersymbol(pd3)

//00000007 = special attack like meteors.

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>315</ID>
          <Description>"Pet Attack Speedz"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : dekaron.exe
  Version: 
  Date   : 2020-01-31
  Author : nvadr

  This script does blah blah blah
}

define(address,0056EEA7)
define(bytes,F3 0F 59 80 11 01 00 00)// F3 0F 59 05 58 24 2C 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
mov [eax+111],(float)0.001

code:
  mulss xmm0,[eax+00000111]
  jmp return

address:
  jmp newmem
  nop
  nop
  nop

/*  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop*/
return:

[DISABLE]

address:
  db bytes
  // mulss xmm0,[eax+00000111]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 00569FAD

"dekaron.exe"+169F8C: 88 45 EA                 -  mov [ebp-16],al
"dekaron.exe"+169F8F: E8 2C C5 F8 FF           -  call dekaron.exe+F64C0
"dekaron.exe"+169F94: 8B 4F 08                 -  mov ecx,[edi+08]
"dekaron.exe"+169F97: 66 89 45 E8              -  mov [ebp-18],ax
"dekaron.exe"+169F9B: 8B 01                    -  mov eax,[ecx]
"dekaron.exe"+169F9D: 8B 40 10                 -  mov eax,[eax+10]
"dekaron.exe"+169FA0: FF D0                    -  call eax
"dekaron.exe"+169FA2: FF 70 0C                 -  push [eax+0C]
"dekaron.exe"+169FA5: E8 06 0A 00 00           -  call dekaron.exe+16A9B0
"dekaron.exe"+169FAA: 8B 45 C4                 -  mov eax,[ebp-3C]
// ---------- INJECTING HERE ----------
"dekaron.exe"+169FAD: F3 0F 59 80 11 01 00 00  -  mulss xmm0,[eax+00000111]
"dekaron.exe"+169FB5: F3 0F 59 05 58 24 2C 01  -  mulss xmm0,[dekaron.exe+EC2458]
// ---------- DONE INJECTING  ----------
"dekaron.exe"+169FBD: E8 DE 32 A9 00           -  call dekaron.exe+BFD2A0
"dekaron.exe"+169FC2: 03 45 CC                 -  add eax,[ebp-34]
"dekaron.exe"+169FC5: 8B 0D 14 5E 5F 01        -  mov ecx,[dekaron.exe+11F5E14]
"dekaron.exe"+169FCB: 89 45 EB                 -  mov [ebp-15],eax
"dekaron.exe"+169FCE: 8B 01                    -  mov eax,[ecx]
"dekaron.exe"+169FD0: 8B 40 04                 -  mov eax,[eax+04]
"dekaron.exe"+169FD3: FF D0                    -  call eax
"dekaron.exe"+169FD5: 89 45 C4                 -  mov [ebp-3C],eax
"dekaron.exe"+169FD8: C7 45 FC 00 00 00 00     -  mov [ebp-04],00000000
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>display_item</Name>
      <Address>443C0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
